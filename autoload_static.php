<?php
// @20180411
// vendor/composer/autoload_static.php


// autoload_static.php @generated by Composer

namespace Composer\Autoload;

class ComposerStaticInit76b982e74f91b60dd43bcc25083d2d45
{
    public static $prefixLengthsPsr4 = array (
        'P' => 
        array (
            'Psr\\SimpleCache\\' => 16,
            'PhpOffice\\PhpSpreadsheet\\' => 25,
        ),
    );

    public static $prefixDirsPsr4 = array (
        'Psr\\SimpleCache\\' => 
        array (
            0 => __DIR__ . '/..' . '/psr/simple-cache/src',
        ),
        'PhpOffice\\PhpSpreadsheet\\' => 
        array (
            0 => __DIR__ . '/..' . '/phpoffice/phpspreadsheet/src/PhpSpreadsheet',
        ),
    );

    public static function getInitializer(ClassLoader $loader)
    {
		/*
			Closure::bind - Duplicates a closure with a specific bound object and class scope
			
			public static Closure Closure::bind(Closure $closure, object $newthis[, mixed $newscope = "static"])
			
			Parameters
			
			closure - 	The anonymous functions to bind.
			
			newthis - 	The object to which the given anonymous function should be bound, or NULL for the closure to be unbound
			
			newscope - 	The class scope to which associated the closure is to be associcated, or 'static' to keep the current one.
						If an object is given, the type of the object will be used instead. 
						This determines the visibility of protected and private methods of the bound object. 
						It is not allowed to pass (an object of) an internal class as this parameter.
			
			Return Values
			Returns a new Closure object or False on failure
			
		*/
		
		// 使用一个具体的受约束对象和类，复制一个闭包。
		// 将 $prefixLengthsPsr4 与 $prefixDirPsr4 赋值给在 autoload_real.php 中实例化的 ClassLoader 对象 
        return \Closure::bind(function () use ($loader) {
            $loader->prefixLengthsPsr4 = ComposerStaticInit76b982e74f91b60dd43bcc25083d2d45::$prefixLengthsPsr4;
            $loader->prefixDirsPsr4 = ComposerStaticInit76b982e74f91b60dd43bcc25083d2d45::$prefixDirsPsr4;

        }, null, ClassLoader::class);
    }
}
